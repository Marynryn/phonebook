{"version":3,"file":"static/js/102.9392334a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://react-homework-template/./src/components/ListContacts/ListContact.module.css?e2fd","components/ListContacts/ListContacts.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Filter_box__d3XyP\",\"title\":\"Filter_title__pSkfx\",\"title_input\":\"Filter_title_input__f+VpL\",\"input\":\"Filter_input__N7T3z\",\"wrap\":\"Filter_wrap__Rb02z\"};","import { useDispatch } from \"react-redux\";\nimport { addFilter } from \"store/contactsreducer\";\nimport css from \"./Filter.module.css\"\nconst Filter = () => {\n\n  const dispatch = useDispatch();\n  const changeFilter = event => {\n    const filter = event.currentTarget.value;\n    dispatch(addFilter(filter));\n\n  };\n  return (\n\n    <div className={css.box}>\n      <h3 className={css.title}>Find contacts by name</h3>\n      <form >\n        <div className={css.wrap}>\n          <input className={css.input} type=\"text\"\n            name=\"name\"\n            onChange={changeFilter}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n\n            required />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"box\":\"Form_box__A47q8\",\"title\":\"Form_title__5gZHF\",\"title_input\":\"Form_title_input__aMn3q\",\"input\":\"Form_input__FTtTw\",\"wrap\":\"Form_wrap__GT7q3\",\"button\":\"Form_button__8NOIT\"};","\nimport { nanoid } from 'nanoid';\nimport css from './Form.module.css';\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { selectGetContacts } from 'store/selectors';\nimport { postContact } from 'store/operations';\n\nexport default function Form() {\n  const contacts = useSelector(selectGetContacts)\n  const dispatch = useDispatch();\n  const nameId = nanoid();\n  const numberId = nanoid();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const formatPhone = phone => {\n      return phone.replace(/(\\d{3})(\\d{2})(\\d{2})/, `$1-$2-$3`);\n    };\n    const contact = {\n\n      name: form.elements.name.value,\n      number: formatPhone(form.elements.number.value),\n\n    };\n    const isContactExists = contacts.some(\n      contact => contact.name === form.elements.name.value\n    );\n    if (isContactExists) {\n      alert(`${form.elements.name.value} is already in contacts.`);\n    } else {\n\n      dispatch(postContact(contact));\n    }\n    form.reset();\n  };\n\n  return (\n    <div className={css.box}>\n      <h3 className={css.title}>New Contact</h3>\n\n\n      <form onSubmit={handleSubmit}>\n        <div className={css.wrap}>\n          <h4 className={css.title_input}>Name</h4>\n\n          <input className={css.input} type=\"text\" name=\"name\" required\n            id={nameId} />\n        </div>\n        <div className={css.wrap}>\n          <h4 className={css.title_input}>Number</h4>\n\n          <input className={css.input} type=\"text\" name=\"number\" id={numberId}\n            required />\n        </div>\n\n        <button className={css.button} type=\"submit\">Send</button>\n      </form>\n    </div>\n  )\n}\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"Contact_contact__4zmlP\",\"button\":\"Contact_button__F+kJb\",\"list\":\"Contact_list__4ja4z\"};","import css from '../Contact/Contact.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../store/operations';\n\nimport { selectVisibleContacts } from '../../store/selectors';\n\nconst Contact = () => {\n  const dispatch = useDispatch();\n  const filterName = useSelector(selectVisibleContacts);\n\n  return (\n    <ul className={css.list}>\n      {filterName.map((contact, createAt) => (\n        <li key={createAt} className={css.contact}>\n          {contact.name} <br /> {contact.number}{' '}\n          <button\n            type=\"button\"\n            className={css.button}\n            onClick={() => dispatch(deleteContact(contact._id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  )\n};\nexport default Contact;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ListContact_list__VHyc4\"};","import Contact from 'components/Contact/Contact';\nimport { selectIsLoading } from 'store/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport css from \"./ListContact.module.css\"\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../store/operations';\n\nexport const ListContacts = () => {\n\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const loading = useSelector(selectIsLoading)\n\n\n  return (<div className={css.list}>\n    {loading ? <Loader /> : <Contact />\n    }</div>)\n\n\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"header1\":\"Contacts_header1__Q0ECm\",\"header2\":\"Contacts_header2__iOZfQ\"};","import Filter from \"components/Filter/Filter\";\nimport Form from \"components/Form/Form\";\nimport { ListContacts } from \"components/ListContacts/ListContacts\";\nimport css from \"./Contacts.module.css\"\nconst Contacts = () => {\n\n\n    return (\n        <div>\n            <h1 className={css.header1}>Phonebook</h1>\n            <Form />\n            <h2 className={css.header2}>Contacts</h2>\n            <Filter />\n            <ListContacts />\n        </div >\n\n    )\n}\n\nexport default Contacts;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["dispatch","useDispatch","_jsxs","className","css","children","_jsx","type","name","onChange","event","filter","currentTarget","value","addFilter","pattern","title","required","Form","contacts","useSelector","selectGetContacts","nameId","nanoid","numberId","onSubmit","preventDefault","phone","form","contact","elements","number","replace","isContactExists","some","alert","concat","postContact","reset","id","filterName","selectVisibleContacts","map","createAt","onClick","deleteContact","_id","ListContacts","useEffect","fetchContacts","loading","selectIsLoading","Loader","Contact","Filter","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}